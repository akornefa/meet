{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","EventGenre.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showDetails","handleButton","setState","prevState","event","this","props","Card","Body","className","Header","start","dateTime","timeZone","Title","summary","Text","location","Button","variant","type","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","InputGroup","onChange","onFocus","display","NumberOfEvents","eventsDisplayed","errorText","currentCity","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","href","startsWith","done","navigator","onLine","localStorage","getItem","data","JSON","parse","getAccessToken","token","url","axios","get","setItem","stringify","getToken","code","encodeCode","encodeURIComponent","access_token","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","EventGenre","useState","setData","COLORS","useEffect","genre","split","includes","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","App","eventCount","locationEvents","slice","getData","number","city","shift","mounted","isTokenValid","Container","Row","Col","md","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f62ed733.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nclass Event extends Component {\n\n  state = {\n    showDetails: false\n  }\n\n  handleButton = () => {\n    this.setState(function (prevState) {\n      return {\n        showDetails: !prevState.showDetails\n      }\n    })\n  };\n\n\n  render() {\n\n    let event = this.props.event;\n\n    return (\n      <Card>\n        <Card.Body>\n          <div className='basicInfo'>\n            <Card.Header className='dateTime'>{event.start.dateTime} {event.start.timeZone}</Card.Header>\n            <Card.Title className='summary'>{event.summary}</Card.Title>\n            <Card.Text className='location'>{event.location}</Card.Text>\n\n          </div>\n          {this.state.showDetails === false &&\n            <Button\n              variant=\"outline-dark\"\n              type='submit'\n              className='detailsButton'\n              onClick={() => this.handleButton()}>\n              Show More\n            </Button>}\n          {this.state.showDetails === true && <div>\n            <p className='eventDescription'>{event.description}</p>\n            <Button\n              variant=\"outline-dark\"\n              type='submit'\n              className='detailsButton'\n              onClick={() => this.handleButton()}>\n              Show Less\n            </Button>\n          </div>\n          }\n        </Card.Body>\n      </Card>\n    );\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map(event =>\n          <li key={event.id} className='event'>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\nexport { InfoAlert, ErrorAlert, OfflineAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: ''\n  }\n  // this simply takes the value from the input and updates the state of query based on that value.\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText: 'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: ''\n      });\n    }\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n\n      <InputGroup className='CitySearch'>\n        <InfoAlert text={this.state.infoText} />\n        <InputGroup.Text>Search by city: </InputGroup.Text>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className='suggestions' style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n\n      </InputGroup>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\nimport { ErrorAlert } from './Alert';\nimport InputGroup from 'react-bootstrap/InputGroup'\n\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    eventsDisplayed: 32,\n    errorText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = +event.target.value;\n    if (value <= 0 || value >= 51) {\n      this.setState({\n        errorText: 'only numbers 1 through 50 are valid',\n        eventsDisplayed: ''\n      });\n    } else {\n      this.setState({\n        eventsDisplayed: value,\n        errorText: ''\n      });\n\n      this.props.updateEvents(this.props.currentCity, value);\n    }\n  }\n\n\n  render() {\n    return (\n      <InputGroup>\n        <InputGroup.Text>Number of Events: </InputGroup.Text>\n        <input\n          type='text'\n          value={this.state.eventsDisplayed}\n          onChange={this.handleInputChanged}\n          className='eventsNumber'>\n        </input>\n        <ErrorAlert text={this.state.errorText} />\n      </InputGroup>\n    );\n  }\n}\nexport default NumberOfEvents;","const mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"organizer\": {\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\n      \"self\": true\n    },\n    \"start\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n      \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n      \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n  },\n];\n\nexport { mockData };\n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data ? JSON.parse(events).events : [];;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://gxjnl48r53.execute-api.us-east-2.amazonaws.com/dev/api/get-events/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://gxjnl48r53.execute-api.us-east-2.amazonaws.com/dev/api/token/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://gxjnl48r53.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}","import React, { useState, useEffect } from \"react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\n\nconst EventGenre = ({ events }) => {\n  const [data, setData] = useState([]);\n\n\n  const COLORS = ['#de960b', '#c99d49', '#90681c', '#a5884f', '#e4b862'];\n  useEffect(() => {\n    const getData = () => {\n      const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n      const data = genres.map((genre) => {\n        const value = events.filter(({ summary }) =>\n          summary.split(' ').includes(genre)).length;\n        return { name: genre, value: value };\n      });\n      return data;\n    };\n    setData(() => getData());\n  }, [events]);\n\n  return (\n    <ResponsiveContainer height={400} >\n      <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default EventGenre;","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ?\n    (\n      <div className=\"WelcomeScreen\">\n        <h1>Welcome to the Meet app</h1>\n        <h4>\n          Log in to see upcoming events around the world for\n          full-stack\n          developers\n        </h4>\n        <div className=\"button_cont\" align=\"center\">\n          <div class=\"google-btn\">\n            <div class=\"google-icon-wrapper\">\n              <img\n                class=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\no.svg\"\n                alt=\"Google sign-in\"\n              />\n            </div>\n            <button onClick={() => { props.getAccessToken() }}\n              rel=\"nofollow noopener\"\n              class=\"btn-text\"\n            >\n              <b>Sign in with google</b>\n            </button>\n            Page 1\n          </div>\n        </div>\n        <a\n          href=\"https://akornefa.github.io/meet/privacy.html\"\n          rel=\"nofollow noopener\"\n        >\n          Privacy policy\n        </a>\n      </div>\n    )\n    : null\n}\nexport default WelcomeScreen;","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport { OfflineAlert } from './Alert';\nimport './nprogress.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\nimport EventGenre from './EventGenre';\nimport WelcomeScreen from './WelcomeScreen';\n\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    eventsDisplayed: 32,\n    currentCity: 'all',\n    showWelcomeScreen: undefined\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\n      true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.eventsDisplayed),\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  //location is the citySuggestion that gets passed\n  // eventCount is the value that gets passed??\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, eventCount),\n        eventsDisplayed: eventCount\n      });\n    });\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div\n      className=\"App\" />\n    return (\n      <Container className='App '>\n        <Row className=\"justify-content-md-center\">\n          <h1>Meet App</h1>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md={6}>\n            {!navigator.onLine ? (<OfflineAlert text='You are offline!' />) : (<OfflineAlert text=' ' />)}\n            <h4>Choose your nearest city</h4>\n            <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md={6}>\n            <NumberOfEvents eventsDisplayed={this.state.eventsDisplayed} updateEvents={this.updateEvents} currentCity={this.state.currentCity} />\n          </Col>\n        </Row>\n        <div className='data-vis-wrapper'>\n          <Row className=\"justify-content-md-center\">\n            <Col md={6}>\n              <h4>Events in each city</h4>\n              <EventGenre events={this.state.events} />\n              <ResponsiveContainer height={400} >\n                <ScatterChart\n\n                  margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                  }}\n                >\n                  <CartesianGrid />\n                  <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n                  <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" />\n                  <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                  <Scatter data={this.getData()} fill=\"#8884d8\" />\n                </ScatterChart>\n              </ResponsiveContainer>\n            </Col>\n          </Row>\n        </div>\n        <Row className=\"justify-content-md-center\">\n          <Col md={6}>\n            <EventList events={this.state.events} />\n          </Col>\n        </Row>\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => { getAccessToken() }} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('9b6e42f049fc4873a5038f79847c25af').install();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('9b6e42f049fc4873a5038f79847c25af').install();\n"],"sourceRoot":""}